Gadgets information
============================================================
0x0000000000400622 : adc byte ptr [rax], ah ; jmp rax
0x000000000040061e : adc dword ptr [rbp - 0x41], ebx ; pop rax ; adc byte ptr [rax], ah ; jmp rax
0x00000000004007df : add bl, dh ; ret
0x00000000004007dd : add byte ptr [rax], al ; add bl, dh ; ret
0x00000000004007db : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x0000000000400766 : add byte ptr [rax], al ; add byte ptr [rax], al ; leave ; ret
0x000000000040062c : add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004007dc : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000400767 : add byte ptr [rax], al ; add cl, cl ; ret
0x000000000040053b : add byte ptr [rax], al ; add rsp, 8 ; ret
0x0000000000400768 : add byte ptr [rax], al ; leave ; ret
0x000000000040062e : add byte ptr [rax], al ; pop rbp ; ret
0x00000000004007de : add byte ptr [rax], al ; ret
0x0000000000400698 : add byte ptr [rcx], al ; ret
0x0000000000400769 : add cl, cl ; ret
0x0000000000400694 : add eax, 0x2009de ; add ebx, esi ; ret
0x0000000000400699 : add ebx, esi ; ret
0x000000000040053e : add esp, 8 ; ret
0x000000000040053d : add rsp, 8 ; ret
0x0000000000400697 : and byte ptr [rax], al ; add ebx, esi ; ret
0x00000000004007b9 : call qword ptr [r12 + rbx*8]
0x00000000004008fb : call qword ptr [rsi]
0x00000000004007ba : call qword ptr [rsp + rbx*8]
0x00000000004006be : call rax
0x0000000000400695 : fimul word ptr [rcx] ; and byte ptr [rax], al ; add ebx, esi ; ret
0x00000000004007bc : fmul qword ptr [rax - 0x7d] ; ret
0x00000000004006b9 : int1 ; push rbp ; mov rbp, rsp ; call rax
0x000000000040061d : je 0x400638 ; pop rbp ; mov edi, 0x601058 ; jmp rax
0x000000000040066b : je 0x400680 ; pop rbp ; mov edi, 0x601058 ; jmp rax
0x00000000004006b8 : je 0x4006b1 ; push rbp ; mov rbp, rsp ; call rax
0x0000000000400625 : jmp rax
0x000000000040076a : leave ; ret
0x0000000000400693 : mov byte ptr [rip + 0x2009de], 1 ; ret
0x0000000000400765 : mov eax, 0 ; leave ; ret
0x00000000004006bc : mov ebp, esp ; call rax
0x0000000000400620 : mov edi, 0x601058 ; jmp rax
0x00000000004007b7 : mov edi, edi ; call qword ptr [r12 + rbx*8]
0x00000000004007b6 : mov edi, r15d ; call qword ptr [r12 + rbx*8]
0x00000000004006bb : mov rbp, rsp ; call rax
0x00000000004006d9 : nop ; pop rbp ; ret
0x0000000000400628 : nop dword ptr [rax + rax] ; pop rbp ; ret
0x00000000004007d8 : nop dword ptr [rax + rax] ; ret
0x0000000000400675 : nop dword ptr [rax] ; pop rbp ; ret
0x0000000000400696 : or dword ptr [rax], esp ; add byte ptr [rcx], al ; ret
0x000000000040066c : or ebx, dword ptr [rbp - 0x41] ; pop rax ; adc byte ptr [rax], ah ; jmp rax
0x00000000004007cc : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000004007ce : pop r13 ; pop r14 ; pop r15 ; ret
0x00000000004007d0 : pop r14 ; pop r15 ; ret
0x00000000004007d2 : pop r15 ; ret
0x0000000000400621 : pop rax ; adc byte ptr [rax], ah ; jmp rax
0x0000000000400692 : pop rbp ; mov byte ptr [rip + 0x2009de], 1 ; ret
0x000000000040061f : pop rbp ; mov edi, 0x601058 ; jmp rax
0x00000000004007cb : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000004007cf : pop rbp ; pop r14 ; pop r15 ; ret
0x0000000000400630 : pop rbp ; ret
0x00000000004007d3 : pop rdi ; ret
0x00000000004007d1 : pop rsi ; pop r15 ; ret
0x00000000004007cd : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000004006ba : push rbp ; mov rbp, rsp ; call rax
0x0000000000400541 : ret
0x000000000040066a : sal byte ptr [rbx + rcx + 0x5d], 0xbf ; pop rax ; adc byte ptr [rax], ah ; jmp rax
0x000000000040061c : sal byte ptr [rcx + rdx + 0x5d], 0xbf ; pop rax ; adc byte ptr [rax], ah ; jmp rax
0x00000000004006b7 : sal byte ptr [rcx + rsi*8 + 0x55], 0x48 ; mov ebp, esp ; call rax
0x00000000004007e5 : sub esp, 8 ; add rsp, 8 ; ret
0x00000000004007e4 : sub rsp, 8 ; add rsp, 8 ; ret
0x000000000040062a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004007da : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000004006b6 : test eax, eax ; je 0x4006b3 ; push rbp ; mov rbp, rsp ; call rax
0x00000000004006b5 : test rax, rax ; je 0x4006b4 ; push rbp ; mov rbp, rsp ; call rax

Unique gadgets found: 69
